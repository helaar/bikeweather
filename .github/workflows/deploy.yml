name: Deploy to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: 'npm'
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Install dependencies
        run: npm ci
      - name: Debug Secrets
        run: |
          echo "Checking if secrets are available (values will be masked):"
          echo "VITE_STRAVA_CLIENT_ID: ${{ secrets.VITE_STRAVA_CLIENT_ID != '' && 'is set' || 'is NOT set' }}"
          echo "VITE_STRAVA_CLIENT_SECRET: ${{ secrets.VITE_STRAVA_CLIENT_SECRET != '' && 'is set' || 'is NOT set' }}"
          echo "Testing if any secret can be accessed: ${{ secrets.GITHUB_TOKEN != '' && 'YES - secrets can be accessed' || 'NO - cannot access any secrets' }}"
          echo "Secret names available in this repository:"
          echo "${{ toJSON(secrets) }}" | grep -o '"[^"]*"' | sort
      - name: Check Environment Variables
        run: node scripts/check-env.js
        env:
          VITE_STRAVA_CLIENT_ID: ${{ secrets.VITE_STRAVA_CLIENT_ID }}
          VITE_STRAVA_CLIENT_SECRET: ${{ secrets.VITE_STRAVA_CLIENT_SECRET }}
          NODE_ENV: 'production'
          GITHUB_ACTIONS: 'true'
      - name: Build
        run: npm run build
        env:
          VITE_STRAVA_CLIENT_ID: ${{ secrets.VITE_STRAVA_CLIENT_ID }}
          VITE_STRAVA_CLIENT_SECRET: ${{ secrets.VITE_STRAVA_CLIENT_SECRET }}
          # Explicitly set GitHub Actions environment
          GITHUB_ACTIONS: 'true'
          # Set mode explicitly
          NODE_ENV: 'production'
      - name: Create .nojekyll file
        run: touch ./dist/.nojekyll
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4